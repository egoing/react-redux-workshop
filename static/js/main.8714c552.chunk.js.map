{"version":3,"sources":["logo.svg","components/Header.jsx","components/Nav.jsx","containers/Nav.jsx","components/Read.jsx","containers/Read.jsx","components/Control.jsx","containers/Control.jsx","components/Create.jsx","containers/Create.jsx","components/Update.jsx","containers/Update.jsx","App.js","serviceWorker.js","store.js","index.js"],"names":["module","exports","Header","href","onClick","this","props","bind","Component","connect","dispatch","type","Nav","tags","i","data","length","d","push","key","id","data-id","e","Number","target","dataset","title","state","contents","Read","desc","mode","welcome_content","selected_content_id","Control","preventDefault","value","window","confirm","Create","onSubmit","name","placeholder","Update","setState","onChange","onChangeHandler","App","article","className","Boolean","location","hostname","match","initState","max_content_id","createStore","action","newId","newContents","filter","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8714c552.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header>\n                <h1><a href=\"#welcome\" onClick={function(){\n                    this.props.onClick();\n                }.bind(this)}>WEB</a></h1>\n                World Wide WEB\n            </header>\n        )\n    }\n}\n\nexport default connect(\n    null, \n    function(dispatch){\n        return {\n            onClick:function(){\n                dispatch({type:'WELCOME'})\n            }\n        }\n    }\n)(Header);","import React, { Component } from 'react'\n\nexport default class Nav extends Component {\n    render() {\n        var tags = [];\n        for(var i=0; i<this.props.data.length; i++){\n            var d = this.props.data[i];\n            tags.push(<li key={d.id}><a href=\"#\" data-id={d.id} onClick={function(e){\n                this.props.onClick(Number(e.target.dataset.id));\n            }.bind(this)}>{d.title}</a></li>)\n        }\n        return (\n            <nav>\n                <ol>\n                    {tags}\n                </ol>\n            </nav>\n        )\n    }\n}\n","import Nav from '../components/Nav';\nimport {connect} from 'react-redux';\nexport default connect(\n    function(state){\n        return {data:state.contents}\n    }, \n    function(dispatch){\n        return {\n            onClick:function(id){\n                dispatch({type:'READ', id:id});\n            }\n        }\n    }\n)(Nav);","import React, { Component } from 'react'\n\nexport default class Read extends Component {\n    render() {\n        return (\n            <article>\n               <h2>{this.props.title}</h2>\n                {this.props.desc}\n            </article>\n        )\n    }\n}\n","import Read from '../components/Read';\nimport { connect } from 'react-redux';\nexport default connect(\n    function(state){\n        var title, desc;\n        if(state.mode === 'WELCOME'){\n            title = state.welcome_content.title;\n            desc = state.welcome_content.desc;\n        } else {\n            for(var i=0; i<state.contents.length; i++){\n                var d = state.contents[i];\n                if(d.id === state.selected_content_id) {\n                    title = d.title;\n                    desc = d.desc;\n                    break;\n                }\n            }\n        }\n        \n        return {\n            title:title, \n            desc:desc\n        }\n    }\n)(Read);","import React, { Component } from 'react'\n\nexport default class Control extends Component {\n    render() {\n        return (\n            <ul>\n                <li><a href=\"create\" onClick={function(e){\n                    this.props.onClick('CREATE');\n                    e.preventDefault();\n                }.bind(this)}>create</a></li>\n                <li><a href=\"update\" onClick={function(e){\n                    this.props.onClick('UPDATE');\n                    e.preventDefault();\n                }.bind(this)}>update</a></li>\n                <li>\n                    <input type=\"button\" value=\"delete\" onClick={function(e){\n                        this.props.onClick('DELETE_PROCESS');\n                        e.preventDefault();\n                    }.bind(this)}></input>\n                </li>\n            </ul>\n        )\n    }\n}\n","import Control from '../components/Control';\nimport { connect } from 'react-redux';\nexport default connect(null, \n    function(dispatch){\n        return {\n            onClick:function(mode){\n                if(mode === 'DELETE_PROCESS'){\n                    if(!window.confirm('Really?')){\n                        return;\n                    }\n                }\n                dispatch({type:mode});\n            }\n        }\n    }    \n)(Control);","import React, { Component } from 'react'\n\nexport default class Create extends Component {\n    render() {\n        return (\n            <form onSubmit={function(e){\n                e.preventDefault();\n                this.props.onSubmit(\n                    e.target.title.value,\n                    e.target.desc.value\n                );\n            }.bind(this)}>\n                <p><input type=\"text\" name=\"title\" placeholder=\"title\"></input></p>\n                <p><textarea type=\"text\" name=\"desc\" placeholder=\"description\"></textarea></p>\n                <p><input type=\"submit\"></input></p>\n            </form>\n        )\n    }\n}\n","import Create from '../components/Create'\nimport { connect } from 'react-redux'\nexport default connect(\n    null, \n    function(dispatch){\n        return {\n            onSubmit:function(title, desc){\n                dispatch({type:'CREATE_PROCESS', title, desc});\n            }\n        }\n    }\n)(Create);","import React, { Component } from 'react'\n\nexport default class Update extends Component {\n    state = {\n        id:this.props.id,\n        title:this.props.title,\n        desc:this.props.desc\n    }\n    onChangeHandler(e){\n        this.setState({\n            [e.target.name]:e.target.value\n        });\n    }\n    render() {\n        return (\n            <form onSubmit={function(e){\n                e.preventDefault();\n                this.props.onSubmit(\n                    Number(e.target.id.value),\n                    e.target.title.value,\n                    e.target.desc.value\n                );\n            }.bind(this)}>\n                <input type=\"hidden\" name=\"id\" value={this.state.id}></input>\n                <p><input type=\"text\" name=\"title\" onChange={this.onChangeHandler.bind(this)} placeholder=\"title\" value={this.state.title}></input></p>\n                <p><textarea type=\"text\" name=\"desc\" onChange={this.onChangeHandler.bind(this)}  placeholder=\"description\" value={this.state.desc}></textarea></p>\n                <p><input type=\"submit\"></input></p>\n            </form>\n        )\n    }\n}\n","import Update from '../components/Update';\nimport { connect } from 'react-redux';\nexport default connect(\n    function(state){\n        var title, desc, id;\n        for(var i=0; i<state.contents.length; i++){\n            var d = state.contents[i];\n            if(d.id === state.selected_content_id) {\n                title = d.title;\n                desc = d.desc;\n                id = d.id;\n                break;\n            }\n        }\n        return {\n            title,\n            desc,\n            id\n        }\n    },\n    function(dispatch){\n        return {\n            onSubmit:function(id,title,desc){\n                dispatch({type:'UPDATE_PROCESS', id,title,desc})\n            }\n        }\n    }\n)(Update);","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport NavContainer from \"./containers/Nav\";\nimport ReadContainer from \"./containers/Read\";\nimport ControlContainer from './containers/Control';\nimport CreateContainer from './containers/Create';\nimport UpdateContainer from './containers/Update';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  render(){\n    var article = null;\n    if(this.props.mode === 'READ'){\n      article = <ReadContainer></ReadContainer>;\n    } else if(this.props.mode === 'WELCOME'){\n      article = <ReadContainer></ReadContainer>\n    } else if(this.props.mode === 'CREATE'){\n      article = <CreateContainer></CreateContainer>\n    }  else if(this.props.mode === 'UPDATE'){\n      article = <UpdateContainer></UpdateContainer>\n    }  \n    return (\n      <div className=\"App\">\n        <Header></Header>\n        <NavContainer></NavContainer>\n        <ControlContainer></ControlContainer>\n        {article}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  function(state){\n    return {\n      mode:state.mode\n    }\n  }\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore} from 'redux';\nvar initState = {\n    mode:'WELCOME',\n    welcome_content:{\n        title:'WEB',\n        desc:'Hello, WEB'\n    },\n    selected_content_id:1,\n    max_content_id:3,\n    contents:[\n        {id:1, title:'HTML', desc:'HTML is ...'},\n        {id:2, title:'CSS', desc:'CSS is ...'},\n        {id:3, title:'JS', desc:'JS is ...'}\n    ]\n}\nfunction reducer(state=initState, action){\n    if(action.type === 'WELCOME'){\n        return {...state, mode:'WELCOME'};\n    }\n    if(action.type === 'READ'){\n        return {...state, mode:'READ', selected_content_id:action.id}\n    }\n    if(action.type === 'CREATE'){\n        return {...state, mode:'CREATE'}\n    }\n    if(action.type === 'CREATE_PROCESS'){\n        var newId = state.max_content_id+1;\n        var newContents = [\n            ...state.contents\n            ,{\n                id:newId, \n                title:action.title,\n                desc:action.desc\n            }\n        ];\n        return {\n            ...state,\n            contents:newContents,\n            max_content_id:newId,\n            mode:'READ',\n            selected_content_id:newId\n        };\n    }\n    if(action.type === 'UPDATE'){\n        return {...state, mode:'UPDATE'}\n    }\n    if(action.type === 'UPDATE_PROCESS'){\n        var newContents = [\n            ...state.contents\n        ];\n        for(var i=0; i<newContents.length; i++){\n            if(newContents[i].id === action.id){\n                newContents[i].title = action.title;\n                newContents[i].desc = action.desc;\n            }\n        }\n        return {\n            ...state,\n            contents:newContents,\n            mode:'READ',\n            selected_content_id:action.id\n        };\n    }\n    if(action.type === 'DELETE_PROCESS'){\n        var newContents = state.contents.filter(function(e){\n            if(e.id === state.selected_content_id){\n                return false;\n            }\n            return true;\n        })\n        return {\n            ...state,\n            contents:newContents,\n            mode:'WELCOME'\n        }\n    }\n    return state;\n}\nexport default createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}